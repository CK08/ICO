clear all
close all
clc

%Screen data
scrsz = get(0,'ScreenSize');
figure('Position',[scrsz(3)/2.0 scrsz(4)/2.4 scrsz(3)/2.0 scrsz(4)/2.0]);
%figure('Position',[scrsz(3)/2.03 scrsz(4)/15.0 scrsz(3)/2.0 scrsz(4)/1.175]);

%Number of divisions for each patch
np = 25;

npx = 50;
npy = 50;
npz = 5;

%Plot mesh
PlotUnd = 0;
LineWidthund = 1.0;
LineStyleund = '-';
colorund1 = 'k';
colorund2 = 'b';
colorund3 = 'k';

% CPArea = 50;
% RGB = [0 0 0];
% colorLCP = 'k';
% LineStyleLCP = '--';
% LineWidthLCP = 1.0;

%Plot connectivities
Conn = 0;
CPAreaGP = 50;
RGBGP = [0.0 0.0 0.0];
FontSize = 10.5;

%Mesh Line Options
%LineWidth = 1.0;

%Mirror Options
Mirror_xy = 0;
Mirror_xz = 0;
Mirror_yz = 0;

%Subplot Options
% spdim = 1;  %Subplot dimension
% umesh = 1;  %Plot Position for original mesh
% dmesh = 1;  %Plot Position for deformed mesh

%Axis
ax = [0.0 1.0 0.0 1.0 0.0 2.0];
axiseq = 1;
noaxis = 0;

%Read Initial data --------------------------------------------------------
%File ID
if(PlotUnd == 1)
    fid = fopen('NURBSInput.txt');
else
    fid = fopen('NURBSOutput.txt');
end

%Read number of patches
L = fgetl(fid);
input = textscan(L,'%d');
nptch = input{1,1};

%Read number of control points
ncpx = zeros(nptch,1);
ncpy = zeros(nptch,1);
ncpz = zeros(nptch,1);
for i=1:nptch
    L=fgetl(fid);
    input = textscan(L,'%d, %d, %d');
    ncpx(i) = input{1,1};
    ncpy(i) = input{1,2};
    ncpz(i) = input{1,3};
end

%Read order of basis for each patch
p = zeros(nptch,1);
q = zeros(nptch,1);
r = zeros(nptch,1);
for i=1:nptch
    L=fgetl(fid);
    input = textscan(L,'%d, %d, %d');
    p(i) = input{1,1};
    q(i) = input{1,2};
    r(i) = input{1,3};
end

%Set knot vector length
lengU = zeros(nptch,1);
lengV = zeros(nptch,1);
lengW = zeros(nptch,1);
for i=1:nptch
    lengU(i) = ncpx(i)+p(i)+1;
    lengV(i) = ncpy(i)+q(i)+1;
    lengW(i) = ncpz(i)+r(i)+1;
end

%Read control points and plot each patch
for iptch=1:nptch
    
    if(iptch == 1)
        colorund = colorund1;
    elseif(iptch == 2)
        colorund = colorund2;
    else
        colorund = colorund3;
    end
    
    Points = zeros(ncpx(iptch),ncpy(iptch), ncpz(iptch),4);
    
    %Get U knot vector
    L=fgetl(fid);
    U = str2num(L);
    
    %Get V knot vector
    L=fgetl(fid);
    V = str2num(L);
    
    %Get W knot vector
    L=fgetl(fid);
    W = str2num(L);
    
    %Read control points
    for i=1:ncpx(iptch)
        for j=1:ncpy(iptch)
            for k=1:ncpz(iptch)
                L=fgetl(fid);
                input = textscan(L,'%f, %f, %f, %f');
                Points(i,j,k,1) = input{1,1};
                Points(i,j,k,2) = input{1,2};
                Points(i,j,k,3) = input{1,3};
                Points(i,j,k,4) = input{1,4};
            end
        end
    end
    
    %Weight control points
    for k1=1:ncpx(iptch)
        for k2 = 1:ncpy(iptch)
            for k3 = 1:ncpz(iptch)
                Pw(k1,k2,k3,1:3) = Points(k1,k2,k3,1:3)*Points(k1,k2,k3,4);
                Pw(k1,k2,k3,4)   = Points(k1,k2,k3,4);
            end
        end
    end
    
    %Organise data for NURBS plot
    pnts=zeros(4,ncpz(iptch),ncpy(iptch),ncpx(iptch));
    for i=1:ncpx(iptch)
        for j=1:ncpy(iptch)
            for k=1:ncpz(iptch)
                pnts(1,j,i,k) = Pw(i,j,k,1);
                pnts(2,j,i,k) = Pw(i,j,k,2);
                pnts(3,j,i,k) = Pw(i,j,k,3);
                pnts(4,j,i,k) = Pw(i,j,k,4);
            end
        end
    end
    
    knots{1} = W;
    knots{2} = V;
    knots{3} = U;
    
    nb = lengU(iptch)-p(iptch)-1;
    nq = lengV(iptch)-q(iptch)-1;
    nr = lengW(iptch)-r(iptch)-1;
    
    u = linspace(U(1),U(lengU(iptch)),npx);
    v = linspace(V(1),V(lengV(iptch)),npy);
    w = linspace(W(1),W(lengW(iptch)),npz);
    
    SBFu = zeros(p(iptch)+1,ncpx(iptch));
    SBFv = zeros(q(iptch)+1,ncpy(iptch));
    SBFw = zeros(r(iptch)+1,ncpz(iptch));
    
    SRF = zeros(npx,npy,npz,3);
    
    
    
    %Lines along zz
    XX = zeros(npz,1);
    YY = zeros(npz,1);
    ZZ = zeros(npz,1);
    for k1=p(iptch)+1:lengU(iptch)-p(iptch)
        %Find span index (xi)(starting from 1)
        uspan = FindSpan(nb,p(iptch),U(k1),U);
        
        %Find basis functions values (xi)
        BFu = BasisFuns(uspan,U(k1),p(iptch),U);
        SBFu(:,k1) = BFu(:,:);
        
        for k2=q(iptch)+1:lengV(iptch)-q(iptch)
            %Find span index (eta) (starting from 1)
            vspan = FindSpan(nq,q(iptch),V(k2),V);
            
            %Find basis functions values (eta)
            BFv = BasisFuns(vspan,V(k2),q(iptch),V);
            SBFv(:,k2) = BFv(:,:);
            
            count = 0;
            for k3=1:npz
                
                %Find span index (eta) (starting from 1)
                wspan = FindSpan(nr,r(iptch),w(k3),W);
                
                %Find basis functions values (eta)
                BFw = BasisFuns(wspan,w(k3),r(iptch),W);
                SBFw(:,k3) = BFw(:,:);
                
                den = 0.0;
                temp = zeros(1,1,1,4);
                for n=0:r(iptch)
                    for m=0:q(iptch)
                        for l=0:p(iptch)
                            den   =  den  + BFu(l+1,1)*BFv(m+1,1)*BFw(n+1,1)*Pw(uspan-p(iptch)+l, vspan-q(iptch)+m, wspan-r(iptch)+n, 4);
                            temp  = temp  + BFu(l+1,1)*BFv(m+1,1)*BFw(n+1,1)*Pw(uspan-p(iptch)+l, vspan-q(iptch)+m, wspan-r(iptch)+n, :);
                            continue
                        end
                    end
                end
                
                SRF(k1,k2,k3,1) = temp(1,1,1,1)/den;
                SRF(k1,k2,k3,2) = temp(1,1,1,2)/den;
                SRF(k1,k2,k3,3) = temp(1,1,1,3)/den;
                
                count = count + 1;
                XX(count) = temp(1,1,1,1)/den;
                YY(count) = temp(1,1,1,2)/den;
                ZZ(count) = temp(1,1,1,3)/den;
                
            end
            
            %subplot(spdim,1,umesh);
            line(XX,YY,ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            
            if(Mirror_xy == 1 && Mirror_xz == 1 && Mirror_yz == 1)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 1 && Mirror_yz == 0)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 0 && Mirror_yz == 1)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 1 && Mirror_yz == 1)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 0 && Mirror_yz == 0)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 1 && Mirror_yz == 0)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 0 && Mirror_yz == 1)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            end
            
            xlabel('x');
            ylabel('y');
            zlabel('z');
            axis (ax);
            
        end
        
    end
    
    %Lines along yy
    XX = zeros(npy,1);
    YY = zeros(npy,1);
    ZZ = zeros(npy,1);
    for k1=p(iptch)+1:lengU(iptch)-p(iptch)
        %Find span index (xi)(starting from 1)
        uspan = FindSpan(nb,p(iptch),U(k1),U);
        
        %Find basis functions values (xi)
        BFu = BasisFuns(uspan,U(k1),p(iptch),U);
        SBFu(:,k1) = BFu(:,:);
        
        for k3=1:r(iptch)+1:lengW(iptch)-r(iptch)
            
            %Find span index (eta) (starting from 1)
            wspan = FindSpan(nr,r(iptch),W(k3),W);
            
            %Find basis functions values (eta)
            BFw = BasisFuns(wspan,W(k3),r(iptch),W);
            SBFw(:,k3) = BFw(:,:);
            
            count = 0;
            for k2=1:npy
                %Find span index (eta) (starting from 1)
                vspan = FindSpan(nq,q(iptch),v(k2),V);
                
                %Find basis functions values (eta)
                BFv = BasisFuns(vspan,v(k2),q(iptch),V);
                SBFv(:,k2) = BFv(:,:);
                
                den = 0.0;
                temp = zeros(1,1,1,4);
                for n=0:r(iptch)
                    for m=0:q(iptch)
                        for l=0:p(iptch)
                            den   =  den  + BFu(l+1,1)*BFv(m+1,1)*BFw(n+1,1)*Pw(uspan-p(iptch)+l, vspan-q(iptch)+m, wspan-r(iptch)+n, 4);
                            temp  = temp  + BFu(l+1,1)*BFv(m+1,1)*BFw(n+1,1)*Pw(uspan-p(iptch)+l, vspan-q(iptch)+m, wspan-r(iptch)+n, :);
                            continue
                        end
                    end
                end
                
                SRF(k1,k2,k3,1) = temp(1,1,1,1)/den;
                SRF(k1,k2,k3,2) = temp(1,1,1,2)/den;
                SRF(k1,k2,k3,3) = temp(1,1,1,3)/den;
                
                count = count + 1;
                XX(count) = temp(1,1,1,1)/den;
                YY(count) = temp(1,1,1,2)/den;
                ZZ(count) = temp(1,1,1,3)/den;
            end
            
            %subplot(spdim,1,umesh);
            line(XX,YY,ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund), hold on;
            
            if(Mirror_xy == 1 && Mirror_xz == 1 && Mirror_yz == 1)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 1 && Mirror_yz == 0)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 0 && Mirror_yz == 1)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 1 && Mirror_yz == 1)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 0 && Mirror_yz == 0)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 1 && Mirror_yz == 0)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 0 && Mirror_yz == 1)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            end
            
            xlabel('x');
            ylabel('y');
            zlabel('z');
            axis (ax);
        end
    end
    
    
    %Lines along xx
    XX = zeros(npx,1);
    YY = zeros(npx,1);
    ZZ = zeros(npx,1);
    for k2=q(iptch)+1:lengV(iptch)-q(iptch)
        %Find span index (eta) (starting from 1)
        vspan = FindSpan(nq,q(iptch),V(k2),V);
        
        %Find basis functions values (eta)
        BFv = BasisFuns(vspan,V(k2),q(iptch),V);
        SBFv(:,k2) = BFv(:,:);
        
        for k3=1:r(iptch)+1:lengW(iptch)-r(iptch)
            
            %Find span index (eta) (starting from 1)
            wspan = FindSpan(nr,r(iptch),W(k3),W);
            
            %Find basis functions values (eta)
            BFw = BasisFuns(wspan,W(k3),r(iptch),W);
            SBFw(:,k3) = BFw(:,:);
            
            count = 0;
            for k1=1:npx
                %Find span index (xi)(starting from 1)
                uspan = FindSpan(nb,p(iptch),u(k1),U);
                
                %Find basis functions values (xi)
                BFu = BasisFuns(uspan,u(k1),p(iptch),U);
                SBFu(:,k1) = BFu(:,:);
                
                den = 0.0;
                temp = zeros(1,1,1,4);
                for n=0:r(iptch)
                    for m=0:q(iptch)
                        for l=0:p(iptch)
                            den   =  den  + BFu(l+1,1)*BFv(m+1,1)*BFw(n+1,1)*Pw(uspan-p(iptch)+l, vspan-q(iptch)+m, wspan-r(iptch)+n, 4);
                            temp  = temp  + BFu(l+1,1)*BFv(m+1,1)*BFw(n+1,1)*Pw(uspan-p(iptch)+l, vspan-q(iptch)+m, wspan-r(iptch)+n, :);
                            continue
                        end
                    end
                end
                
                SRF(k1,k2,k3,1) = temp(1,1,1,1)/den;
                SRF(k1,k2,k3,2) = temp(1,1,1,2)/den;
                SRF(k1,k2,k3,3) = temp(1,1,1,3)/den;
                
                count = count + 1;
                XX(count) = temp(1,1,1,1)/den;
                YY(count) = temp(1,1,1,2)/den;
                ZZ(count) = temp(1,1,1,3)/den;
            end
            
            %subplot(spdim,1,umesh);
            line(XX,YY,ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund), hold on;
            
            if(Mirror_xy == 1 && Mirror_xz == 1 && Mirror_yz == 1)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 1 && Mirror_yz == 0)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(     XX,-1.0*YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 0 && Mirror_yz == 1)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 1 && Mirror_yz == 1)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
                line(-1.0*XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 1 && Mirror_xz == 0 && Mirror_yz == 0)
                line(     XX,     YY,-1.0*ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 1 && Mirror_yz == 0)
                line(     XX,-1.0*YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            elseif(Mirror_xy == 0 && Mirror_xz == 0 && Mirror_yz == 1)
                line(-1.0*XX,     YY,     ZZ,'Color',colorund,'LineStyle',LineStyleund,'LineWidth',LineWidthund)
            end
            
            xlabel('x');
            ylabel('y');
            zlabel('z');
            axis (ax);
            
            if(axiseq == 1)
                axis equal
            end
            if(noaxis == 1)
                axis equal
                set(gca,'xtick',[],'ytick',[],'ztick',[])
                %axis off
            end
            
            axis([0.0 0.3 0.0 0.3 0.0 0.3])
            view([0.0 -90.0 0.0])
            
%             axis([0.0 2.01 0.0 2.0 0.0 2.0])
%             view([0.0 -90.0 0.0])
            
            %axis([0.0 3.01 0.0 1.5 0.0 2.0])
            %view([0.0 0.0 90.0])
            
        end
    end
      
%     for k1=1:ncpx(iptch)
%         for k2=1:ncpy(iptch)
%             for k3=1:ncpz(iptch)
%                 scatter3(Points(k1,k2,k3,1),Points(k1,k2,k3,2),Points(k1,k2,k3,3),CPArea,RGB,'fill'), hold on
%                 
%                 if(k1 > 1)
%                     point1 = [Points(k1-1,k2,k3,1),Points(k1,k2,k3,1)];
%                     point2 = [Points(k1-1,k2,k3,2),Points(k1,k2,k3,2)];
%                     point3 = [Points(k1-1,k2,k3,3),Points(k1,k2,k3,3)];
%                     line(point1,point2,point3,'Color',colorLCP,'LineStyle',LineStyleLCP,'LineWidth',LineWidthLCP), hold on
%                 end
%                 
%                 if(k2 > 1)
%                     point1 = [Points(k1,k2-1,k3,1),Points(k1,k2,k3,1)];
%                     point2 = [Points(k1,k2-1,k3,2),Points(k1,k2,k3,2)];
%                     point3 = [Points(k1,k2-1,k3,3),Points(k1,k2,k3,3)];
%                     line(point1,point2,point3,'Color',colorLCP,'LineStyle',LineStyleLCP,'LineWidth',LineWidthLCP), hold on
%                 end
%                 
%                 if(k3 > 1)
%                     point1 = [Points(k1,k2,k3-1,1),Points(k1,k2,k3,1)];
%                     point2 = [Points(k1,k2,k3-1,2),Points(k1,k2,k3,2)];
%                     point3 = [Points(k1,k2,k3-1,3),Points(k1,k2,k3,3)];
%                     line(point1,point2,point3,'Color',colorLCP,'LineStyle',LineStyleLCP,'LineWidth',LineWidthLCP), hold on
%                 end
%                 
%             end
%         end
%     end
        
end %iptch

if(Conn == 1)
    if(PlotUnd == 1)
        fid = fopen('GCoords.txt');
    else
        fid = fopen('GCoords_Final.txt');
    end
    
    %Read number of patches
    L = fgetl(fid);
    input = textscan(L,'%d');
    tnodes = input{1,1};
    
    for i=1:tnodes
        L = fgetl(fid);
        input = textscan(L,'%f, %f, %f, %f');
        GCoords(i,1) = input{1,1};
        GCoords(i,2) = input{1,2};
        GCoords(i,3) = input{1,3};
        GCoords(i,4) = input{1,4};
    end
    
    labels = cellstr( num2str([1:tnodes]') );

    scatter3(GCoords(:,1), GCoords(:,2), GCoords(:,3), CPAreaGP, RGBGP,'fill')
    text(GCoords(:,1), GCoords(:,2), GCoords(:,3), labels, 'VerticalAlignment','bottom','HorizontalAlignment','right','FontWeight','bold','FontSize',FontSize)

    
end


